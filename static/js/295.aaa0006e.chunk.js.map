{"version":3,"file":"static/js/295.aaa0006e.chunk.js","mappings":"4PAEaA,EAAQC,EAAAA,EAAAA,MAAH,ibAgBLC,EAASD,EAAAA,EAAAA,OAAH,udAkBNE,EAAOF,EAAAA,EAAAA,IAAH,0C,SCwBjB,EAvDe,WACb,OAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAI,SAC9B,GAA0BC,EAAAA,EAAAA,UAASF,GAAc,IAAjD,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,KAAVN,IAGJO,EAAAA,EAAAA,IAAkBP,GAAOQ,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAAd,GACvC,GAAE,CAACT,IAEJ,IAIMU,EAAQ,WACZT,EAAS,GACV,EAQD,OACE,UAACR,EAAD,YACE,kBAAMkB,SAhBW,SAAAC,GACnBA,EAAEC,iBACFH,GACD,EAaG,WACE,SAACpB,EAAD,CACEwB,KAAK,OACLC,YAAY,wBACZC,aAAa,MACbC,WAAS,EACTC,MAAOlB,EACPmB,SAfa,SAAAP,GACnB,IAAQM,EAAUN,EAAEQ,OAAZF,MACRjB,EAASiB,GACTtB,EAA0B,KAAVsB,EAAe,CAAElB,MAAOkB,GAAU,CAAC,EACpD,KAaK,SAAC1B,EAAD,CAAQsB,KAAK,SAAb,wBAEF,wBACc,KAAXZ,GACCA,EAAOmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMtB,GAAlC,SACGmB,KAFID,EADA,QAUpB,C","sources":["components/views/Movies/Movies.styled.jsx","components/views/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  width: 400px;\n  padding: 5px;\n  border: none;\n  border-radius: 5px;\n  -webkit-box-shadow: 2px 6px 2px -1px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 2px 6px 2px -1px rgba(0, 0, 0, 0.75);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    outline: 1px solid #5860f7;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  padding: 5px;\n  margin-left: 5px;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  -webkit-box-shadow: 2px 6px 2px -1px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 2px 6px 2px -1px rgba(0, 0, 0, 0.75);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #5860f7;\n    color: white;\n  }\n`;\n\nexport const List = styled.div`\n  padding: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchMovieByQuery } from '../../Api/Api';\nimport { List, Input, Button } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('query');\n  const [query, setQuery] = useState(name ? name : '');\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    fetchMovieByQuery(query).then(response => setMovies(response));\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    reset();\n  };\n  const reset = () => {\n    setQuery('');\n  };\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <List>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Let`s find some movie\"\n          autoComplete=\"off\"\n          autoFocus\n          value={query}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\">Search</Button>\n      </form>\n      <ul>\n        {movies !== '' &&\n          movies.map(({ id, original_title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </List>\n  );\n};\n\nexport default Movies;\n"],"names":["Input","styled","Button","List","useSearchParams","searchParams","setSearchParams","name","get","useState","query","setQuery","movies","setMovies","location","useLocation","useEffect","fetchMovieByQuery","then","response","reset","onSubmit","e","preventDefault","type","placeholder","autoComplete","autoFocus","value","onChange","target","map","id","original_title","to","state","from"],"sourceRoot":""}